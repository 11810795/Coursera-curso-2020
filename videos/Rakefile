require 'fileutils'
require 'tmpdir'
require 'tempfile'

def original_script
  filename = Dir.new(Rake.original_dir).entries.select{ |x| x.match( /\.txt$/ ) }.first
  return File.open( Rake.original_dir + '/' + filename ).read
end

desc "Copy .MTS files referenced in current script from SD card"
task :copy do
  sh "sudo mount /dev/sdb1 /mnt/storage"
  for line in original_script.split("\n") do
    if line.match( /^([0-9]+) / )
      next if File.exist?( Rake.original_dir + '/' + $1 + '.MTS' )
      filename = '/mnt/storage/PRIVATE/AVCHD/BDMV/STREAM/' + $1 + '.MTS'
      puts "Copying #{filename} to #{Rake.original_dir}..."
      FileUtils.cp( filename, Rake.original_dir )
    end
  end
  sh "sudo umount /mnt/storage"
end

desc "Use ffplay to view the videos listed in the current script"
task :preview do
  for line in original_script.split("\n") do
    if line.match( /^([0-9]+) / )
      sh "ffplay -fs #{Rake.original_dir}/#{$1}.MTS"
    end
  end
end

desc "Generate the title video"
task :title do
  title = original_script.split("\n").select{ |x| x.match( /^title:/ ) }.first
  title.gsub!( /title: /, '' )
  puts title
  title
  target = "#{Rake.original_dir}/title.mp4"
  Dir.mktmpdir(nil,"/tmp") {|dir|
    FileUtils.cp( "../lectures/titles/video/title/Rakefile", dir )
    FileUtils.cp( "../lectures/titles/video/title/animation.params", dir )
    FileUtils.cp( "../lectures/titles/video/title/title.tex.erb", dir )
    Dir.chdir( dir )
    f = File.open( "title.txt", "w" )
    f.puts title
    f.close
    Kernel.system( "rake -j8 title.mp4" )
    FileUtils.cp( "title.mp4", target )
  }   
end

desc "Generate the XML file which goes into the autocutter"
task :xml do
  f = File.open( "#{Rake.original_dir}/video.xml", "w" )
  f.puts '<?xml version="1.0" encoding="UTF-8"?>'
  f.puts '<movie author="Jim Fowler">'
  for line in original_script.split("\n") do
    if line.match( /^title/ )
      f.puts '<video src="title.mp4" audio="/home/jim/sequences-and-series/lectures/titles/audio/intro.wav" in="0" out="3"/>'
    end

    if line.match( /^([0-9]+)/ )
      filename = "#{$1}.MTS"
      throw "Missing #{filename}" unless File.exist?( "#{Rake.original_dir}/#{filename}" )

      if line.match( /^[0-9]+ paper/ )
        f.puts "<video src=\"#{filename}\" flip=\"true\"/>"
      else
        f.puts "<video src=\"#{filename}\"/>"
      end
    end
  end
  f.puts '<video src="/home/jim/sequences-and-series/lectures/titles/video/end-title/title.mp4" audio="/home/jim/sequences-and-series/lectures/titles/audio/outro.wav" in="0" out="10"/>'
  f.puts '</movie>'
  f.close
end

desc "Apply the autocutter to the XML file"
task :autocut do
  Dir.chdir( Rake.original_dir )
  sh "ruby /home/jim/autocut/autocut.rb video.xml"
end

desc "Use MLT to serialize the editlist to an mp4"
task :serialize do
  Dir.chdir( Rake.original_dir )

  if `hostname` == "compute.math.osu.edu"
    file = Tempfile.new('editlist')
    sh "cat editlist.xml | sed 's/\/home\/jim/\/home\/fowler.291/g' > #{file}"
    sh "melt #{file} -consumer avformat:dump.mp4 vcodec=libx264 pix_fmt=yuv420p preset=medium tune=film crf=22 coder=1 me_method=umh x264opts=rc_lookahead=30 x264opts=b-pyramid=strict trellis=1 threads=16 acodec=aac ac=1 ab=128K"
  else
    sh "melt editlist.xml -consumer avformat:dump.mp4 vcodec=libx264 pix_fmt=yuv420p preset=medium tune=film crf=22 coder=1 me_method=umh x264opts=rc_lookahead=30 x264opts=b-pyramid=strict trellis=1 threads=16 acodec=aac ac=1 ab=128K"
  end

  sh "MP4Box -inter 500 dump.mp4"
  filename = Rake.original_dir.split('/')[-1]
  sh "mv dump.mp4 #{filename}.mp4"
end

desc "Use MLT on compute to serialize the editlist to an mp4"
task :serialize do
  Dir.chdir( Rake.original_dir )
  sh "melt editlist.xml -consumer avformat:dump.mp4 vcodec=libx264 pix_fmt=yuv420p preset=medium tune=film crf=22 coder=1 me_method=umh x264opts=rc_lookahead=30 x264opts=b-pyramid=strict trellis=1 threads=16 acodec=aac ac=1 ab=128K"
  sh "MP4Box -inter 500 dump.mp4"
  filename = Rake.original_dir.split('/')[-1]
  sh "mv dump.mp4 #{filename}.mp4"
end
